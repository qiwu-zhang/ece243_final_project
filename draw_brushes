#include <stdbool.h>
#include <stdlib.h>

volatile int pixel_buffer_start; 
int black_brush[192] = {
  /*Pixel format: Red: 5 bit, Green: 6 bit, Blue: 5 bit*/
  0x79, 0xce, 0x00, 0x00, 0x00, 0x00, 0xcb, 0x5a, 0xae, 0x73, 0x00, 0x00, 0x00, 0x00, 0xec, 0x62, 
  0xfc, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x10, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x63, 
  0xf7, 0xbd, 0x9e, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x92, 0x94, 
  0x7d, 0xef, 0x72, 0x94, 0xbe, 0xf7, 0x9e, 0xf7, 0xff, 0xff, 0x1c, 0xe7, 0xff, 0xff, 0x51, 0x8c, 
  0xff, 0xff, 0x0c, 0x63, 0xff, 0xff, 0x9e, 0xf7, 0xff, 0xff, 0x3d, 0xef, 0xfb, 0xde, 0x35, 0xad, 
  0xff, 0xff, 0xcb, 0x5a, 0xff, 0xff, 0x9e, 0xf7, 0xff, 0xff, 0xdf, 0xff, 0x8e, 0x73, 0xff, 0xff, 
  0xff, 0xff, 0xec, 0x62, 0xff, 0xff, 0x9e, 0xf7, 0xff, 0xff, 0xff, 0xff, 0x8a, 0x52, 0xff, 0xff, 
  0xff, 0xff, 0xbe, 0xf7, 0xcf, 0x7b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xab, 0x5a, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xc7, 0x39, 0xff, 0xff, 0xff, 0xff, 0xef, 0x7b, 0xbf, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x1c, 0xe7, 0x00, 0x00, 0x61, 0x08, 0x28, 0x42, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x39, 0xce, 0x41, 0x08, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

int blue_brush[] ={
  0x6e, 0x1a, 0x79, 0x03, 0x78, 0x03, 0x3b, 0x65, 0xfb, 0x5c, 0x78, 0x03, 0x79, 0x03, 0x6e, 0x22, 
  0x2c, 0x22, 0x33, 0x02, 0x32, 0x02, 0xb4, 0x3b, 0x74, 0x33, 0x32, 0x02, 0x33, 0x02, 0x4d, 0x2a, 
  0xef, 0x83, 0xda, 0xe6, 0x79, 0xde, 0xfb, 0xee, 0xfb, 0xe6, 0x79, 0xde, 0xda, 0xe6, 0xef, 0x83, 
  0x31, 0x8c, 0xbf, 0xff, 0x5d, 0xef, 0xff, 0xff, 0xdf, 0xff, 0x5d, 0xef, 0xbf, 0xff, 0x51, 0x8c, 
  0x71, 0x8c, 0x9e, 0xf7, 0x3c, 0xe7, 0xdf, 0xff, 0xbf, 0xff, 0x3c, 0xe7, 0x7e, 0xf7, 0x72, 0x94, 
  0xdb, 0xde, 0xf4, 0xa4, 0x7d, 0xef, 0xdf, 0xff, 0xbf, 0xff, 0x7d, 0xef, 0xd3, 0x9c, 0x1c, 0xe7, 
  0xff, 0xff, 0x4d, 0x6b, 0x9e, 0xf7, 0xdf, 0xff, 0xbf, 0xff, 0x9e, 0xf7, 0x4d, 0x6b, 0xff, 0xff, 
  0xff, 0xff, 0xcf, 0x7b, 0x7e, 0xf7, 0xdf, 0xff, 0xdf, 0xff, 0x5d, 0xef, 0xef, 0x7b, 0xff, 0xff, 
  0xff, 0xff, 0xbf, 0xff, 0xcf, 0x7b, 0xff, 0xff, 0xff, 0xff, 0xae, 0x7b, 0xdf, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x51, 0x94, 0x0b, 0x01, 0x0b, 0x01, 0x71, 0x94, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x01, 0x4c, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x96, 0xb5, 0xb7, 0xb5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

int green_brush[] = {
  0x49, 0x23, 0x8b, 0x05, 0x6b, 0x05, 0x73, 0x66, 0x31, 0x4e, 0x4a, 0x05, 0x6a, 0x05, 0xee, 0x5b, 
  0xc9, 0x42, 0x6a, 0x33, 0x6a, 0x33, 0xed, 0x5b, 0xac, 0x4b, 0x49, 0x33, 0x49, 0x2b, 0xcf, 0x73, 
  0x72, 0x94, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0x72, 0x94, 
  0x51, 0x8c, 0x9e, 0xf7, 0x3d, 0xef, 0xdf, 0xff, 0xbe, 0xf7, 0x3d, 0xef, 0x3d, 0xef, 0xd3, 0x9c, 
  0xd3, 0x9c, 0x3d, 0xef, 0x3d, 0xef, 0xdf, 0xff, 0xbe, 0xf7, 0x5d, 0xef, 0x55, 0xad, 0xbb, 0xde, 
  0x3c, 0xe7, 0xb2, 0x94, 0x7d, 0xef, 0xdf, 0xff, 0xbe, 0xf7, 0x9e, 0xf7, 0x8e, 0x73, 0xff, 0xff, 
  0xff, 0xff, 0x8e, 0x73, 0x9e, 0xf7, 0xdf, 0xff, 0xbe, 0xf7, 0xbe, 0xf7, 0x8e, 0x73, 0xff, 0xff, 
  0xff, 0xff, 0xf0, 0x83, 0x7e, 0xf7, 0xff, 0xff, 0xdf, 0xff, 0xf8, 0xc5, 0x96, 0xb5, 0xff, 0xff, 
  0xff, 0xff, 0x5d, 0xef, 0x51, 0x8c, 0xff, 0xff, 0xff, 0xff, 0x2c, 0x63, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x8e, 0x73, 0x83, 0x02, 0x80, 0x01, 0xd7, 0xbd, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0x04, 0x03, 0xa5, 0x02, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x2f, 0x74, 0x96, 0xad, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

int pink_brush[] = {
  0xeb, 0x80, 0x10, 0xe0, 0x50, 0xd8, 0x36, 0xeb, 0x75, 0xea, 0x0f, 0xd8, 0x0f, 0xe0, 0xef, 0x8a, 
  0x69, 0x59, 0x08, 0x78, 0x08, 0x78, 0xac, 0x81, 0x4b, 0x81, 0x08, 0x78, 0x08, 0x78, 0x4e, 0x7b, 
  0xb2, 0x8c, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0x92, 0x94, 
  0x31, 0x8c, 0x9e, 0xf7, 0x3d, 0xef, 0xdf, 0xff, 0xbe, 0xf7, 0x3d, 0xef, 0x7d, 0xef, 0xb2, 0x94, 
  0x92, 0x94, 0x7e, 0xf7, 0x3d, 0xef, 0xdf, 0xff, 0xbe, 0xf7, 0x5d, 0xef, 0xd7, 0xbd, 0x59, 0xce, 
  0xba, 0xd6, 0x35, 0xad, 0x7d, 0xef, 0xdf, 0xff, 0xbe, 0xf7, 0x9e, 0xf7, 0xae, 0x73, 0xff, 0xff, 
  0xff, 0xff, 0x8e, 0x73, 0x9e, 0xf7, 0xdf, 0xff, 0xbe, 0xf7, 0x9e, 0xf7, 0x8e, 0x73, 0xff, 0xff, 
  0xff, 0xff, 0xaf, 0x7b, 0x9e, 0xf7, 0xff, 0xff, 0xdf, 0xff, 0x9a, 0xd6, 0xf3, 0x9c, 0xff, 0xff, 
  0xff, 0xff, 0xbb, 0xde, 0x14, 0xa5, 0xff, 0xff, 0xff, 0xff, 0x6e, 0x73, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x0c, 0x63, 0xea, 0x80, 0xa8, 0x60, 0xf3, 0x9c, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x9d, 0xe7, 0x08, 0x98, 0x07, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x71, 0x52, 0x9c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

int red_brush[] = {
  0x22, 0x90, 0x23, 0xf8, 0x06, 0xf1, 0x90, 0xfb, 0x0a, 0xfa, 0x03, 0xf0, 0x02, 0xf8, 0xb3, 0x94, 
  0xa7, 0x49, 0x0c, 0x8b, 0x0c, 0x83, 0xcf, 0x8b, 0x4d, 0x8b, 0xec, 0x82, 0xab, 0x82, 0x14, 0x9d, 
  0x71, 0x8c, 0xff, 0xff, 0xdf, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xf7, 0x3d, 0xe7, 0x55, 0xad, 
  0x30, 0x84, 0x9e, 0xf7, 0x5d, 0xef, 0xff, 0xff, 0x7e, 0xf7, 0x7d, 0xef, 0x35, 0xad, 0xdb, 0xde, 
  0x51, 0x8c, 0xbe, 0xf7, 0x5d, 0xef, 0xff, 0xff, 0x7e, 0xf7, 0x9e, 0xf7, 0xaf, 0x7b, 0xff, 0xff, 
  0x75, 0xad, 0x7a, 0xd6, 0x5d, 0xef, 0xff, 0xff, 0x7e, 0xf7, 0x9e, 0xf7, 0xaf, 0x7b, 0xff, 0xff, 
  0xff, 0xff, 0xaf, 0x7b, 0x9e, 0xf7, 0xff, 0xff, 0x9e, 0xf7, 0x1c, 0xe7, 0x51, 0x8c, 0xff, 0xff, 
  0xff, 0xff, 0x8e, 0x73, 0xbf, 0xff, 0xff, 0xff, 0xdf, 0xff, 0x10, 0x84, 0xbf, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xb6, 0xb5, 0x18, 0xc6, 0xff, 0xff, 0xff, 0xff, 0x2d, 0x6b, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x86, 0x41, 0x00, 0x90, 0x00, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x79, 0xc6, 0x00, 0xc8, 0x29, 0x7a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x09, 0x6a, 0x1c, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
  


 void draw_black_brush(){
  int i = 0, j = 0;
  for(int k = 0; k<8*12*2 - 1; k+=2){
    int red = ((black_brush[k+1]) & 0xF8 >> 3) <<11;
    int green = (((black_brush[k] & 0xE0) >>5)) | ((black_brush[k+1] & 0x7) << 3);
    int blue = (black_brush[k] & 0x1F);
    short int p = red | ((green <<  5) | blue);
    plot_pixel(4+i, j, p);
    i+=1;
    if(i == 8){
      i = 0;
      j+=1;
    }
  }
}

void draw_blue_brush(){
  int i = 0, j = 0;
  for(int k = 0; k<8*12*2 - 1; k+=2){
    int red = ((blue_brush[k+1]) & 0xF8 >> 3) <<11;
    int green = (((blue_brush[k] & 0xE0) >>5)) | ((blue_brush[k+1] & 0x7) << 3);
    int blue = (blue_brush[k] & 0x1F);
    short int p = red | ((green <<  5) | blue);
    plot_pixel(20+i, j, p);
    i+=1;
    if(i == 8){
      i = 0;
      j+=1;
    }
  }
}


void draw_green_brush(){
  int i = 0, j = 0;
  for(int k = 0; k<8*12*2 - 1; k+=2){
    int red = ((green_brush[k+1]) & 0xF8 >> 3) <<11;
    int green = (((green_brush[k] & 0xE0) >>5)) | ((green_brush[k+1] & 0x7) << 3);
    int blue = (green_brush[k] & 0x1F);
    short int p = red | ((green <<  5) | blue);
    plot_pixel(36+i, j, p);
    i+=1;
    if(i == 8){
      i = 0;
      j+=1;
    }
  }
}

void draw_pink_brush(){
  int i = 0, j = 0;
  for(int k = 0; k<8*12*2 - 1; k+=2){
    int red = ((pink_brush[k+1]) & 0xF8 >> 3) <<11;
    int green = (((pink_brush[k] & 0xE0) >>5)) | ((pink_brush[k+1] & 0x7) << 3);
    int blue = (pink_brush[k] & 0x1F);
    short int p = red | ((green <<  5) | blue);
    plot_pixel(52+i, j, p);
    i+=1;
    if(i == 8){
      i = 0;
      j+=1;
    }
  }
}

void draw_red_brush(){
  int i = 0, j = 0;
  for(int k = 0; k<8*12*2 - 1; k+=2){
    int red = ((red_brush[k+1]) & 0xF8 >> 3) <<11;
    int green = (((red_brush[k] & 0xE0) >>5)) | ((red_brush[k+1] & 0x7) << 3);
    int blue = (red_brush[k] & 0x1F);
    short int p = red | ((green <<  5) | blue);
    plot_pixel(68+i, j, p);
    i+=1;
    if(i == 8){
      i = 0;
      j+=1;
    }
  }
}

